node sf_2
  (R: bool;
  S: bool;
  T: bool;
  x: int)
returns
  (a: int;
  b: int;
  c: int);

var
  V846_ini: bool;
  V847_ok10: bool;
  V849_ok11: bool;
  V851_ok14: bool;
  V853_ok3: bool;
  V855_ok4: bool;
  V858_ok7: bool;
  V860_s12: bool;
  V861_s12_1: bool;
  V862_s13: bool;
  V863_s13_1: bool;
  V864_s15: bool;
  V865_s15_1: bool;
  V866_s16: bool;
  V867_s16_1: bool;
  V868_s5: bool;
  V869_s5_1: bool;
  V870_s6: bool;
  V871_s6_1: bool;
  V872_s8: bool;
  V873_s8_1: bool;
  V874_s9: bool;
  V875_s9_1: bool;
  V876_sg10: bool;
  V877_sg10_1: bool;
  V878_sg11: bool;
  V879_sg11_1: bool;
  V880_sg14: bool;
  V881_sg14_1: bool;
  V882_sg3: bool;
  V883_sg3_1: bool;
  V884_sg4: bool;
  V885_sg4_1: bool;
  V886_sg7: bool;
  V887_sg7_1: bool;
  V889_R1: bool;
  V891_S1: bool;
  V893_T1: bool;
  V895_a_1: int;
  V896_b_1: int;
  V897_c_1: int;
  V2621_lv17: bool;
  V2622_lv18: bool;
  V2623_lv19: bool;
  V2624_ok3_1: bool;
  V2625_ok3_2: bool;
  V2626_sg4_1: bool;
  V2627_sg7_1: bool;
  V2628_R1_1: bool;
  V2629_S1_1: bool;
  V2630_T1_1: bool;
  V2631_a_1: int;
  V2632_cv19: bool;
  V2633_end: bool;
  V2634_cv18: bool;
  V2635_end: bool;
  V2636_cv17: bool;
  V2637_end: bool;
  V2638_en5: bool;
  V2639_en6: bool;
  V2640_lv20: bool;
  V2641_lv21: bool;
  V2642_lv22: bool;
  V2643_ok4_1: bool;
  V2644_ok4_2: bool;
  V2645_s5_1: bool;
  V2646_s6_1: bool;
  V2647_a_1: int;
  V2648_cv22: bool;
  V2649_end: bool;
  V2650_cv21: bool;
  V2651_end: bool;
  V2652_cv20: bool;
  V2653_end: bool;
  V2654_trm: bool;
  V2655_en8: bool;
  V2656_en9: bool;
  V2657_lv23: bool;
  V2658_lv24: bool;
  V2659_lv25: bool;
  V2660_ok7_1: bool;
  V2661_ok7_2: bool;
  V2662_s8_1: bool;
  V2663_s9_1: bool;
  V2664_a_1: int;
  V2665_cv25: bool;
  V2666_end: bool;
  V2667_cv24: bool;
  V2668_end: bool;
  V2669_cv23: bool;
  V2670_end: bool;
  V2671_trm: bool;
  V2721_lv26: bool;
  V2722_lv27: bool;
  V2723_lv28: bool;
  V2724_ok10_1: bool;
  V2725_ok10_2: bool;
  V2726_sg11_1: bool;
  V2727_sg14_1: bool;
  V2728_b_1: int;
  V2729_c_1: int;
  V2730_cv28: bool;
  V2731_end: bool;
  V2732_cv27: bool;
  V2733_end: bool;
  V2734_cv26: bool;
  V2735_end: bool;
  V2736_en12: bool;
  V2737_en13: bool;
  V2738_lv29: bool;
  V2739_lv30: bool;
  V2740_lv31: bool;
  V2741_ok11_1: bool;
  V2742_ok11_2: bool;
  V2743_s12_1: bool;
  V2744_s13_1: bool;
  V2745_b_1: int;
  V2746_cv31: bool;
  V2747_end: bool;
  V2748_cv30: bool;
  V2749_end: bool;
  V2750_cv29: bool;
  V2751_end: bool;
  V2752_trm: bool;
  V2753_en15: bool;
  V2754_en16: bool;
  V2755_lv32: bool;
  V2756_lv33: bool;
  V2757_lv34: bool;
  V2758_ok14_1: bool;
  V2759_ok14_2: bool;
  V2760_s15_1: bool;
  V2761_s16_1: bool;
  V2762_b_1: int;
  V2763_cv34: bool;
  V2764_end: bool;
  V2765_cv33: bool;
  V2766_end: bool;
  V2767_cv32: bool;
  V2768_end: bool;
  V2769_trm: bool;

let
  a = (if (V886_sg7 and V2655_en8) then (V2664_a_1 + 1) else V2664_a_1);
  b = (if (V880_sg14 and V2753_en15) then (x + 5) else V2762_b_1);
  c = (if (V876_sg10 and V2722_lv27) then (V2729_c_1 + 1) else V2729_c_1);
  V846_ini = (true -> false);
  V847_ok10 = (if (V846_ini and (not (V879_sg11_1 or V881_sg14_1))) then (if 
  (not (false or V2725_ok10_2)) then true else V2725_ok10_2) else V2725_ok10_2)
  ;
  V849_ok11 = (if ((V878_sg11 and (not V879_sg11_1)) and (not (V863_s13_1 or 
  V861_s12_1))) then (if (not (false or V2742_ok11_2)) then true else 
  V2742_ok11_2) else V2742_ok11_2);
  V851_ok14 = (if ((V880_sg14 and (not V881_sg14_1)) and (not (V867_s16_1 or 
  V865_s15_1))) then (if (not (false or V2759_ok14_2)) then true else 
  V2759_ok14_2) else V2759_ok14_2);
  V853_ok3 = (if (V846_ini and (not (V885_sg4_1 or V887_sg7_1))) then (if (not 
  (false or V2625_ok3_2)) then true else V2625_ok3_2) else V2625_ok3_2);
  V855_ok4 = (if ((V884_sg4 and (not V885_sg4_1)) and (not (V871_s6_1 or 
  V869_s5_1))) then (if (not (false or V2644_ok4_2)) then true else V2644_ok4_2
  ) else V2644_ok4_2);
  V858_ok7 = (if ((V886_sg7 and (not V887_sg7_1)) and (not (V875_s9_1 or 
  V873_s8_1))) then (if (not (false or V2661_ok7_2)) then true else V2661_ok7_2
  ) else V2661_ok7_2);
  V860_s12 = (if ((not V2752_trm) and ((not V2743_s12_1) and ((V849_ok11 and 
  V2739_lv30) or (V849_ok11 and V2738_lv29)))) then true else V2743_s12_1);
  V861_s12_1 = (false -> (pre V860_s12));
  V862_s13 = (if ((not V2752_trm) and ((not V2744_s13_1) and (V849_ok11 and 
  V2740_lv31))) then true else V2744_s13_1);
  V863_s13_1 = (false -> (pre V862_s13));
  V864_s15 = (if ((not V2769_trm) and ((not V2760_s15_1) and ((V851_ok14 and 
  V2756_lv33) or (V851_ok14 and V2755_lv32)))) then true else V2760_s15_1);
  V865_s15_1 = (false -> (pre V864_s15));
  V866_s16 = (if ((not V2769_trm) and ((not V2761_s16_1) and (V851_ok14 and 
  V2757_lv34))) then true else V2761_s16_1);
  V867_s16_1 = (false -> (pre V866_s16));
  V868_s5 = (if ((not V2654_trm) and ((not V2645_s5_1) and ((V855_ok4 and 
  V2641_lv21) or (V855_ok4 and V2640_lv20)))) then true else V2645_s5_1);
  V869_s5_1 = (false -> (pre V868_s5));
  V870_s6 = (if ((not V2654_trm) and ((not V2646_s6_1) and (V855_ok4 and 
  V2642_lv22))) then true else V2646_s6_1);
  V871_s6_1 = (false -> (pre V870_s6));
  V872_s8 = (if ((not V2671_trm) and ((not V2662_s8_1) and ((V858_ok7 and 
  V2659_lv25) or (V858_ok7 and V2657_lv23)))) then true else V2662_s8_1);
  V873_s8_1 = (false -> (pre V872_s8));
  V874_s9 = (if ((not V2671_trm) and ((not V2663_s9_1) and (V858_ok7 and 
  V2658_lv24))) then true else V2663_s9_1);
  V875_s9_1 = (false -> (pre V874_s9));
  V876_sg10 = ((V846_ini and (not false)) -> ((V846_ini or (pre V876_sg10)) and 
  (not false)));
  V877_sg10_1 = (false -> (pre V876_sg10));
  V878_sg11 = (if ((not false) and ((not V2726_sg11_1) and (V847_ok10 and 
  V2722_lv27))) then true else V2726_sg11_1);
  V879_sg11_1 = (false -> (pre V878_sg11));
  V880_sg14 = (if ((not false) and ((not V2727_sg14_1) and ((V847_ok10 and 
  V2723_lv28) or (V847_ok10 and V2721_lv26)))) then true else V2727_sg14_1);
  V881_sg14_1 = (false -> (pre V880_sg14));
  V882_sg3 = ((V846_ini and (not false)) -> ((V846_ini or (pre V882_sg3)) and 
  (not false)));
  V883_sg3_1 = (false -> (pre V882_sg3));
  V884_sg4 = (if ((not false) and ((not V2626_sg4_1) and (V853_ok3 and 
  V2622_lv18))) then true else V2626_sg4_1);
  V885_sg4_1 = (false -> (pre V884_sg4));
  V886_sg7 = (if ((not false) and ((not V2627_sg7_1) and ((V853_ok3 and 
  V2623_lv19) or (V853_ok3 and V2621_lv17)))) then true else V2627_sg7_1);
  V887_sg7_1 = (false -> (pre V886_sg7));
  V889_R1 = (if (V886_sg7 and V2659_lv25) then true else V2628_R1_1);
  V891_S1 = (if (V886_sg7 and V2658_lv24) then true else V2629_S1_1);
  V893_T1 = (if (V882_sg3 and V2622_lv18) then true else V2630_T1_1);
  V895_a_1 = (0 -> (pre a));
  V896_b_1 = (0 -> (pre b));
  V897_c_1 = (0 -> (pre c));
  V2621_lv17 = (if (V846_ini and (not (V885_sg4_1 or V887_sg7_1))) then (if (
  V2636_cv17 and V2637_end) then true else false) else false);
  V2622_lv18 = (if V887_sg7_1 then (if (V2634_cv18 and V2635_end) then true 
  else false) else false);
  V2623_lv19 = (if V885_sg4_1 then (if (V2632_cv19 and V2633_end) then true 
  else false) else false);
  V2624_ok3_1 = (if V885_sg4_1 then (if ((not (false or false)) and T) then 
  true else false) else false);
  V2625_ok3_2 = (if V887_sg7_1 then (if ((not (false or V2624_ok3_1)) and T) 
  then true else V2624_ok3_1) else V2624_ok3_1);
  V2626_sg4_1 = (if V885_sg4_1 then (if ((V853_ok3 and V2623_lv19) or false) 
  then false else V885_sg4_1) else V885_sg4_1);
  V2627_sg7_1 = (if V887_sg7_1 then (if ((V853_ok3 and V2622_lv18) or false) 
  then false else V887_sg7_1) else V887_sg7_1);
  V2628_R1_1 = (if (V884_sg4 and V2641_lv21) then true else false);
  V2629_S1_1 = (if (V884_sg4 and V2642_lv22) then true else false);
  V2630_T1_1 = (if (V882_sg3 and V2623_lv19) then true else false);
  V2631_a_1 = (if (V884_sg4 and V2638_en5) then (V2647_a_1 + 3) else V2647_a_1)
  ;
  V2632_cv19 = (if ((not (false or false)) and T) then true else false);
  V2633_end = (if ((not (false or false)) and T) then true else false);
  V2634_cv18 = (if ((not (false or V2624_ok3_1)) and T) then true else false);
  V2635_end = (if ((not (false or V2624_ok3_1)) and T) then true else false);
  V2636_cv17 = (if (not (false or V2625_ok3_2)) then true else false);
  V2637_end = (if (not (false or V2625_ok3_2)) then true else false);
  V2638_en5 = (if ((not V2654_trm) and ((not V2645_s5_1) and ((V855_ok4 and 
  V2641_lv21) or (V855_ok4 and V2640_lv20)))) then true else false);
  V2639_en6 = (if ((not V2654_trm) and ((not V2646_s6_1) and (V855_ok4 and 
  V2642_lv22))) then true else false);
  V2640_lv20 = (if ((V884_sg4 and (not V885_sg4_1)) and (not (V871_s6_1 or 
  V869_s5_1))) then (if (V2652_cv20 and V2653_end) then true else false) else 
  false);
  V2641_lv21 = (if V871_s6_1 then (if (V2650_cv21 and V2651_end) then true else 
  false) else false);
  V2642_lv22 = (if V869_s5_1 then (if (V2648_cv22 and V2649_end) then true else 
  false) else false);
  V2643_ok4_1 = (if V869_s5_1 then (if ((not (false or false)) and S) then true 
  else false) else false);
  V2644_ok4_2 = (if V871_s6_1 then (if ((not (false or V2643_ok4_1)) and R) 
  then true else V2643_ok4_1) else V2643_ok4_1);
  V2645_s5_1 = (if V869_s5_1 then (if (((V853_ok3 and V2623_lv19) or (V855_ok4 
  and V2642_lv22)) or V2654_trm) then false else V869_s5_1) else V869_s5_1);
  V2646_s6_1 = (if V871_s6_1 then (if (((V853_ok3 and V2623_lv19) or (V855_ok4 
  and V2641_lv21)) or V2654_trm) then false else V871_s6_1) else V871_s6_1);
  V2647_a_1 = (if (V884_sg4 and V2639_en6) then (V895_a_1 + 4) else V895_a_1);
  V2648_cv22 = (if ((not (false or false)) and S) then true else false);
  V2649_end = (if ((not (false or false)) and S) then true else false);
  V2650_cv21 = (if ((not (false or V2643_ok4_1)) and R) then true else false);
  V2651_end = (if ((not (false or V2643_ok4_1)) and R) then true else false);
  V2652_cv20 = (if (not (false or V2644_ok4_2)) then true else false);
  V2653_end = (if (not (false or V2644_ok4_2)) then true else false);
  V2654_trm = ((not V884_sg4) and V885_sg4_1);
  V2655_en8 = (if ((not V2671_trm) and ((not V2662_s8_1) and ((V858_ok7 and 
  V2659_lv25) or (V858_ok7 and V2657_lv23)))) then true else false);
  V2656_en9 = (if ((not V2671_trm) and ((not V2663_s9_1) and (V858_ok7 and 
  V2658_lv24))) then true else false);
  V2657_lv23 = (if ((V886_sg7 and (not V887_sg7_1)) and (not (V875_s9_1 or 
  V873_s8_1))) then (if (V2669_cv23 and V2670_end) then true else false) else 
  false);
  V2658_lv24 = (if V873_s8_1 then (if (V2667_cv24 and V2668_end) then true else 
  false) else false);
  V2659_lv25 = (if V875_s9_1 then (if (V2665_cv25 and V2666_end) then true else 
  false) else false);
  V2660_ok7_1 = (if V875_s9_1 then (if ((not (false or false)) and R) then true 
  else false) else false);
  V2661_ok7_2 = (if V873_s8_1 then (if ((not (false or V2660_ok7_1)) and S) 
  then true else V2660_ok7_1) else V2660_ok7_1);
  V2662_s8_1 = (if V873_s8_1 then (if (((V853_ok3 and V2622_lv18) or (V858_ok7 
  and V2658_lv24)) or V2671_trm) then false else V873_s8_1) else V873_s8_1);
  V2663_s9_1 = (if V875_s9_1 then (if (((V853_ok3 and V2622_lv18) or (V858_ok7 
  and V2659_lv25)) or V2671_trm) then false else V875_s9_1) else V875_s9_1);
  V2664_a_1 = (if (V886_sg7 and V2656_en9) then (V2631_a_1 + 2) else V2631_a_1)
  ;
  V2665_cv25 = (if ((not (false or false)) and R) then true else false);
  V2666_end = (if ((not (false or false)) and R) then true else false);
  V2667_cv24 = (if ((not (false or V2660_ok7_1)) and S) then true else false);
  V2668_end = (if ((not (false or V2660_ok7_1)) and S) then true else false);
  V2669_cv23 = (if (not (false or V2661_ok7_2)) then true else false);
  V2670_end = (if (not (false or V2661_ok7_2)) then true else false);
  V2671_trm = ((not V886_sg7) and V887_sg7_1);
  V2721_lv26 = (if (V846_ini and (not (V879_sg11_1 or V881_sg14_1))) then (if (
  V2734_cv26 and V2735_end) then true else false) else false);
  V2722_lv27 = (if V881_sg14_1 then (if (V2732_cv27 and V2733_end) then true 
  else false) else false);
  V2723_lv28 = (if V879_sg11_1 then (if (V2730_cv28 and V2731_end) then true 
  else false) else false);
  V2724_ok10_1 = (if V879_sg11_1 then (if ((not (false or false)) and V893_T1) 
  then true else false) else false);
  V2725_ok10_2 = (if V881_sg14_1 then (if ((not (false or V2724_ok10_1)) and 
  V893_T1) then true else V2724_ok10_1) else V2724_ok10_1);
  V2726_sg11_1 = (if V879_sg11_1 then (if ((V847_ok10 and V2723_lv28) or false) 
  then false else V879_sg11_1) else V879_sg11_1);
  V2727_sg14_1 = (if V881_sg14_1 then (if ((V847_ok10 and V2722_lv27) or false) 
  then false else V881_sg14_1) else V881_sg14_1);
  V2728_b_1 = (if (V878_sg11 and V2736_en12) then (x + 7) else V2745_b_1);
  V2729_c_1 = (if (V876_sg10 and V2723_lv28) then (V897_c_1 + 1) else V897_c_1)
  ;
  V2730_cv28 = (if ((not (false or false)) and V893_T1) then true else false);
  V2731_end = (if ((not (false or false)) and V893_T1) then true else false);
  V2732_cv27 = (if ((not (false or V2724_ok10_1)) and V893_T1) then true else 
  false);
  V2733_end = (if ((not (false or V2724_ok10_1)) and V893_T1) then true else 
  false);
  V2734_cv26 = (if (not (false or V2725_ok10_2)) then true else false);
  V2735_end = (if (not (false or V2725_ok10_2)) then true else false);
  V2736_en12 = (if ((not V2752_trm) and ((not V2743_s12_1) and ((V849_ok11 and 
  V2739_lv30) or (V849_ok11 and V2738_lv29)))) then true else false);
  V2737_en13 = (if ((not V2752_trm) and ((not V2744_s13_1) and (V849_ok11 and 
  V2740_lv31))) then true else false);
  V2738_lv29 = (if ((V878_sg11 and (not V879_sg11_1)) and (not (V863_s13_1 or 
  V861_s12_1))) then (if (V2750_cv29 and V2751_end) then true else false) else 
  false);
  V2739_lv30 = (if V863_s13_1 then (if (V2748_cv30 and V2749_end) then true 
  else false) else false);
  V2740_lv31 = (if V861_s12_1 then (if (V2746_cv31 and V2747_end) then true 
  else false) else false);
  V2741_ok11_1 = (if V861_s12_1 then (if ((not (false or false)) and V891_S1) 
  then true else false) else false);
  V2742_ok11_2 = (if V863_s13_1 then (if ((not (false or V2741_ok11_1)) and 
  V889_R1) then true else V2741_ok11_1) else V2741_ok11_1);
  V2743_s12_1 = (if V861_s12_1 then (if (((V847_ok10 and V2723_lv28) or (
  V849_ok11 and V2740_lv31)) or V2752_trm) then false else V861_s12_1) else 
  V861_s12_1);
  V2744_s13_1 = (if V863_s13_1 then (if (((V847_ok10 and V2723_lv28) or (
  V849_ok11 and V2739_lv30)) or V2752_trm) then false else V863_s13_1) else 
  V863_s13_1);
  V2745_b_1 = (if (V878_sg11 and V2737_en13) then (x + 8) else V896_b_1);
  V2746_cv31 = (if ((not (false or false)) and V891_S1) then true else false);
  V2747_end = (if ((not (false or false)) and V891_S1) then true else false);
  V2748_cv30 = (if ((not (false or V2741_ok11_1)) and V889_R1) then true else 
  false);
  V2749_end = (if ((not (false or V2741_ok11_1)) and V889_R1) then true else 
  false);
  V2750_cv29 = (if (not (false or V2742_ok11_2)) then true else false);
  V2751_end = (if (not (false or V2742_ok11_2)) then true else false);
  V2752_trm = ((not V878_sg11) and V879_sg11_1);
  V2753_en15 = (if ((not V2769_trm) and ((not V2760_s15_1) and ((V851_ok14 and 
  V2756_lv33) or (V851_ok14 and V2755_lv32)))) then true else false);
  V2754_en16 = (if ((not V2769_trm) and ((not V2761_s16_1) and (V851_ok14 and 
  V2757_lv34))) then true else false);
  V2755_lv32 = (if ((V880_sg14 and (not V881_sg14_1)) and (not (V867_s16_1 or 
  V865_s15_1))) then (if (V2767_cv32 and V2768_end) then true else false) else 
  false);
  V2756_lv33 = (if V867_s16_1 then (if (V2765_cv33 and V2766_end) then true 
  else false) else false);
  V2757_lv34 = (if V865_s15_1 then (if (V2763_cv34 and V2764_end) then true 
  else false) else false);
  V2758_ok14_1 = (if V865_s15_1 then (if ((not (false or false)) and V891_S1) 
  then true else false) else false);
  V2759_ok14_2 = (if V867_s16_1 then (if ((not (false or V2758_ok14_1)) and 
  V889_R1) then true else V2758_ok14_1) else V2758_ok14_1);
  V2760_s15_1 = (if V865_s15_1 then (if (((V847_ok10 and V2722_lv27) or (
  V851_ok14 and V2757_lv34)) or V2769_trm) then false else V865_s15_1) else 
  V865_s15_1);
  V2761_s16_1 = (if V867_s16_1 then (if (((V847_ok10 and V2722_lv27) or (
  V851_ok14 and V2756_lv33)) or V2769_trm) then false else V867_s16_1) else 
  V867_s16_1);
  V2762_b_1 = (if (V880_sg14 and V2754_en16) then (x + 6) else V2728_b_1);
  V2763_cv34 = (if ((not (false or false)) and V891_S1) then true else false);
  V2764_end = (if ((not (false or false)) and V891_S1) then true else false);
  V2765_cv33 = (if ((not (false or V2758_ok14_1)) and V889_R1) then true else 
  false);
  V2766_end = (if ((not (false or V2758_ok14_1)) and V889_R1) then true else 
  false);
  V2767_cv32 = (if (not (false or V2759_ok14_2)) then true else false);
  V2768_end = (if (not (false or V2759_ok14_2)) then true else false);
  V2769_trm = ((not V880_sg14) and V881_sg14_1);
tel


----------------********************************** automaton version********************

node events1(R, S, T: bool; x: int) returns(a, b, c: int);
  var a_1, b_1, c_1 :int; init :bool;--R1, R1_1, S1, S1_1, T1, T1_1: event;
let
  -- initial values
	a_1 = 0-> pre a;
	b_1 = 0-> pre b;
	c_1 = 0-> pre c;
    init =true -> false;
 
--Automate A 
  automaton a

--execute A entry action
  state A1:
   unless (not R and not S and not init and T) resume A2
	let		

		automaton aa1
			
		state A1A_ENTRY:
			let
				a = x + 1;
				b = b_1;
				c = c_1;
				
			tel
		until true resume A1A_IDL
		
		state A1A_IDL:
		    --unless T resume A1A_ENTRY
			unless (S) resume A1A_EXIT_A1B_ENTRY
			let
				a = a_1;
				b = b_1;
				c = c_1;
			tel
			
		state A1A_EXIT_A1B_ENTRY:
			let		
				--emit(S1);
				a = x+2;
				b = b_1;
				c = c_1;
			tel	
		until true resume A1B_IDL
		
		state A1B_IDL:
			--unless T resume A1A_ENTRY
			unless (R ) resume A1B_EXIT_A1A_ENTRY
			let
				a = a_1;
				b = b_1;
				c = c_1;
			tel
			
		state A1B_EXIT_A1A_ENTRY:
			let		
				--emit(R1);
				a = x+1;
				b = b_1;
				c = c_1;
			tel	
		until true resume A1A_IDL
	tel	



  state A2:
  unless T restart A1

	let		
		automaton a2

			
		state A2A_ENTRY:
			let
				a = x + 3;
				b = b_1;
				c = c_1;
			tel
		until true resume A2A_IDL
		
		state A2A_IDL:
			--unless T resume A2A_ENTRY
			unless (S)  resume A2A_EXIT_A2B_ENTRY
			let
				a = a_1;
				b = b_1;
				c = c_1;
			tel
			
		state A2A_EXIT_A2B_ENTRY:
			let		
				--emit(S1);
				a = x+4;
				b = b_1;
				c = c_1;
			tel	
		until true resume A2B_IDL
		
		state A2B_IDL:
			--unless T resume A2A_ENTRY
			unless (R)  resume A2B_EXIT_A2A_ENTRY
			let
				a = a_1;
				b = b_1;
				c = c_1;
			tel
			
		state A2B_EXIT_A2A_ENTRY:
			let		
				--emit(R1);
				a = x+3;
				b = b_1;
				c = c_1;
			tel	
		until true resume A2A_IDL
	tel	
 
tel



------------**************Verification****************--------------
node top (R, S, T: bool; x: int)returns (OK:bool);
var x_1, x_2, x_3, y_1, y_2, y_3 :int;
let
  (x_1, x_2, x_3) = sf_2(R, S, T, x);
  (y_1, y_2, y_3) = events1(R, S, T, x);
  OK = x_1 = y_1 ;--and x_2 = y_2 and x_3 = y_3  ;
  --%PROPERTY OK=true;
tel
